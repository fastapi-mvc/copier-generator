"""Custom fastapi-mvc {{generator_name}} generator implementation."""
import os

import click
import copier
from fastapi_mvc.cli import GeneratorCommand
from fastapi_mvc.utils import require_fastapi_mvc_project
from fastapi_mvc.constants import ANSWERS_FILE


cmd_short_help = "Run custom generator {{generator_name.replace("_", "-")}}."
cmd_help = """\
Creates a dummy hello_world.py example.
"""
epilog = """\
Example:
    `fastapi-mvc generate {{generator_name}} WORLD!`

    creates an example file:
        helo_world.py

"""


@click.command(
    # Using ``GeneratorCommand`` class is not required.
    # It only provides you with alias, category and some help formatting utils.
    # You can use ``click.Command`` should you choose.
    cls=GeneratorCommand,
    help=cmd_help,
    short_help=cmd_short_help,
    # Define alias short-cut for more efficient invocation
    alias="foo",
    # Define category under which generator should be printed in ``fastapi-mvc generate`` CLI command help page.
    category="Custom",
)
@click.argument(
    "NAME",
    required=True,
    nargs=1,
)
def {{generator_name}}(name: str) -> None:
    """Define {{generator_name}} generator command-line interface.

    Args:
        name (str): Given name to greet.

    """
    project_data = require_fastapi_mvc_project()

    data = {
        "project_name": project_data["project_name"],
        "name": name.lower().replace("-", "_"),
    }

    copier.run_copy(
        src_path=os.path.dirname(__file__),  # Or use git repository
        data=data,
        answers_file=ANSWERS_FILE,
    )
